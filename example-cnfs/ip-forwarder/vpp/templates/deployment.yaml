apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Chart.Name }}
  labels:
    app: {{ $.Chart.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $.Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ $.Chart.Name }}
      annotations:
        k8s.v1.cni.cncf.io/networks: ipfwd-bridge
    spec:
      containers:
      {{ range $k, $v := .Values.cnf }}
        - name: {{ $.Chart.Name }}-{{$k}}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          securityContext:
            privileged: {{ $.Values.privileged }}
          readinessProbe:
            exec:
              command: ["vppctl", "show ver"]
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            exec:
              command: ["vppctl", "show ver"]
            initialDelaySeconds: 10
            periodSeconds: 30
          volumeMounts:
          - name: config-volume
            subPath: startup_{{$k}}.conf
            mountPath: /etc/vpp/startup.conf
          - name: config-volume
            subPath: setup_{{$k}}.gate
            mountPath: /etc/vpp/setup.gate
          - name: vpp-sockets
            mountPath: {{ $.Values.volumeMounts.vpp_sockets.mountPath }}
      {{ end }}
      volumes:
        - name: config-volume
          configMap:
            name: vpp-configmap
            items:
            {{ range $k, $v := .Values.cnf }}
            - key: startup_{{$k}}.conf
              path: startup_{{$k}}.conf
            - key: setup_{{$k}}.gate
              path: setup_{{$k}}.gate
            {{ end }}
        - name: vpp-sockets
          hostPath:
            path: /etc/vpp/sockets/
